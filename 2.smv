MODULE main
VAR
red: { 101, 102, 103, 104, 105, 106, 107, 201, 202, 203, 204, 205, 206, 207, 301, 302, 303, 304, 305, 306, 307, 401, 402, 403, 404, 405, 406, 407, 999};
black: { 101, 102, 103, 104, 105, 106, 107, 201, 202, 203, 204, 205, 206, 207, 301, 302, 303, 304, 305, 306, 307, 401, 402, 403, 404, 405, 406, 407 };
turn : boolean;
dir: {up,down,right,left,space};

DEFINE
b_notLeft := black=101 | black=201 | black=202 | black=203 | black=301 | black=306 | black=307 | black=401;
r_notLeft := red=101 | red=201 | red=202 | red=203 | red=301 | red=306 | red=307 | red=401;
b_notRight := black= 107 | black=201| black=202 | black=207 | black=305 | black=306 | black=307 | black= 407;
r_notRight := red= 107 | red=201 | red=202| red=207 | red=305 | red=306 | red=307 | red=407;
b_notUp := black=101 | black=102 | black=103 | black=104 | black=105 | black=106 | black=107 | black=302 | black=406;
r_notUp := red=101 | red=102 | red=103 | red=104 | red=105 | red=106 | red=107 | red=302 | red=406;
b_notDown := black=401 | black=402 | black=403 | black=404 | black=405 | black=406 | black=407 | black=202 | black=306;
r_notDown := red=401 | red=402 | red=403 | red=404 | red=405 | red=406 | red=407 | red=202 | red=306;

redStart := 203;
redGoal := 402;
blkStart := 201;

sero:= 0;
garo:=0;


ASSIGN

init(turn) := TRUE;
next(turn) := !turn;
init(red) := redStart;

next(red):= 
    turn=FALSE? red:
    red=redGoal? 999:
    red=999? red:
    dir=right&!r_notRight? red + 1:
    dir=left&!r_notLeft? red - 1:
    dir=up&!r_notUp? red - 100:
    dir=down&!r_notDown? red + 100:
    dir=space? red: red;


init(black) := blkStart;

next(black) := case
    (black mod 100-red mod 100>0)&(!b_notLeft):  black - 1;
    (black mod 100-red mod 100<0)&(!b_notRight): black + 1;
    (black/100-red/100<0)&(!b_notDown):  black + 100;
    (black/100-red/100>0)&(!b_notUp):  black - 100;
    TRUE: black;
    esac;

LTLSPEC !(!(red=black) U (red=999));